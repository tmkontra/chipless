// This file is auto-generated by @hey-api/openapi-ts

export type PlayerAction = {
  actionType: 'CHECK' | 'FOLD' | 'BET' | 'RAISE' | 'CALL'
  chipCount?: number
}

export type actionType = 'CHECK' | 'FOLD' | 'BET' | 'RAISE' | 'CALL'

export type BettingRound = {
  id: string
  sequence: number
  players: Array<Player>
  currentPlayer: Player
  actions: Array<PlayerAction>
}

export type Cashout = {
  amount: number
}

export type Hand = {
  id: string
  sequence: number
  players: Array<HandPlayer>
  rounds: Array<BettingRound>
  currentRound: BettingRound
  isFinished: boolean
}

export type HandPlayer = {
  player: Player
  winnings?: number
  wager?: number
  initialChips: number
  isDealer: boolean
}

export type Player = {
  id: number
  name: string
  buyCount: number
}

export type PlayerAdminView = {
  player: Player
  shortCode: string
  cashouts: Array<Cashout>
  outstandingChips: number
}

export type PlayerHandView = {
  hand: Hand
  player: PlayerAdminView
  isTurn: boolean
  availableActions: Array<PlayerAction>
  availableChips: number
}

export type CreateGame = {
  name: string
  buyinAmount: number
  buyinChips: number
}

export type Game = {
  id: number
  name: string
  shortCode: string
  buyinAmount: number
  buyinChips: number
  players: Array<Player>
}

export type GameAdminView = {
  game: Game
  adminCode: string
  players: Array<PlayerAdminView>
  hands: Array<Hand>
  currentHand?: Hand
  nextHandOrder: Array<PlayerAdminView>
  playersBankrupt: Array<PlayerAdminView>
  newPlayers: Array<PlayerAdminView>
}

export type PlayerActionData = {
  body: PlayerAction
  headers: {
    'If-Match': string
  }
  path: {
    playerCode: string
  }
}

export type PlayerActionResponse = PlayerHandView

export type PlayerActionError = unknown

export type StartGameData = {
  body: CreateGame
}

export type StartGameResponse = GameAdminView

export type StartGameError = unknown

export type PlayerCashoutData = {
  path: {
    adminCode: string
    code: string
  }
  query: {
    chipCount: number
  }
}

export type PlayerCashoutResponse = Player

export type PlayerCashoutError = unknown

export type PlayerBuyData = {
  path: {
    adminCode: string
    code: string
  }
}

export type PlayerBuyResponse = Player

export type PlayerBuyError = unknown

export type StartHandData = {
  path: {
    adminCode: string
  }
  query?: {
    /**
     * the players for this hand, beginning with the small blind (player seated left of the dealer)
     */
    seatOrderPlayerIds?: Array<number>
  }
}

export type StartHandResponse = GameAdminView

export type StartHandError = unknown

export type NextBettingRoundData = {
  path: {
    adminCode: string
  }
}

export type NextBettingRoundResponse = GameAdminView

export type NextBettingRoundError = unknown

export type JoinGameData = {
  path: {
    code: string
  }
  query: {
    playerName: string
  }
}

export type JoinGameResponse = PlayerAdminView

export type JoinGameError = unknown

export type ViewPlayerData = {
  path: {
    playerCode: string
  }
}

export type ViewPlayerResponse = PlayerAdminView

export type ViewPlayerError = unknown

export type ViewCurrentHandData = {
  path: {
    playerCode: string
  }
}

export type ViewCurrentHandResponse = PlayerHandView

export type ViewCurrentHandError = unknown

export type ViewAdminData = {
  path: {
    adminCode: string
  }
}

export type ViewAdminResponse = GameAdminView

export type ViewAdminError = unknown

export type ViewGameData = {
  path: {
    code: string
  }
}

export type ViewGameResponse = Game

export type ViewGameError = unknown

export type IndexResponse = string

export type IndexError = unknown

export type $OpenApiTs = {
  '/player/{playerCode}/action': {
    post: {
      req: PlayerActionData
      res: {
        /**
         * OK
         */
        '200': PlayerHandView
      }
    }
  }
  '/game': {
    post: {
      req: StartGameData
      res: {
        /**
         * OK
         */
        '200': GameAdminView
      }
    }
  }
  '/gameAdmin/{adminCode}/player/{code}/cashout': {
    post: {
      req: PlayerCashoutData
      res: {
        /**
         * OK
         */
        '200': Player
      }
    }
  }
  '/gameAdmin/{adminCode}/player/{code}/buy': {
    post: {
      req: PlayerBuyData
      res: {
        /**
         * OK
         */
        '200': Player
      }
    }
  }
  '/gameAdmin/{adminCode}/hand': {
    post: {
      req: StartHandData
      res: {
        /**
         * OK
         */
        '200': GameAdminView
      }
    }
  }
  '/gameAdmin/{adminCode}/hand/advance': {
    post: {
      req: NextBettingRoundData
      res: {
        /**
         * OK
         */
        '200': GameAdminView
      }
    }
  }
  '/game/{code}/join': {
    post: {
      req: JoinGameData
      res: {
        /**
         * OK
         */
        '200': PlayerAdminView
      }
    }
  }
  '/player/{playerCode}': {
    get: {
      req: ViewPlayerData
      res: {
        /**
         * OK
         */
        '200': PlayerAdminView
      }
    }
  }
  '/player/{playerCode}/hand': {
    get: {
      req: ViewCurrentHandData
      res: {
        /**
         * OK
         */
        '200': PlayerHandView
      }
    }
  }
  '/gameAdmin/{adminCode}': {
    get: {
      req: ViewAdminData
      res: {
        /**
         * OK
         */
        '200': GameAdminView
      }
    }
  }
  '/game/{code}': {
    get: {
      req: ViewGameData
      res: {
        /**
         * OK
         */
        '200': Game
      }
    }
  }
  '/': {
    get: {
      res: {
        /**
         * OK
         */
        '200': string
      }
    }
  }
}
